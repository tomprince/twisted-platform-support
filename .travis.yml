#
# This is the Travis-CI configuration.
#
# The actual dependency installation and test execution is done via tox as a
# way to share the same process between Travis-CI and Buildbot.
#
language: python
sudo: false


# Only run tests on push on a few branches.
# Test on PR should be execute for all branches and forks.
branches:
  only:
  - master


env:
  global:
    - TRIAL_REPORTER=text


matrix:
  include:
    - python: 2.7
      env: TOXENV=py27-withcov,codecov-publish
    - python: 3.3
      env: TOXENV=py33-withcov,codecov-publish
    - python: 3.4
      env: TOXENV=py34-withcov,codecov-publish
    - python: 3.5
      env: TOXENV=py35-withcov,codecov-publish
    # For now all non-trial tests are in a single job to reduce the time spent
    # on starting separate jobs.
    - python: 2.7
      env: TOXENV=flake8,manifest-checker

    # Wheel builders (manylinux)
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
           PRE_CMD=linux32



cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.pyenv


install:
  - if [[ -n "${TOX_ENV}" ]]; then ./.travis/install.sh tox; fi
  - if [[ -n "${DOCKER_IMAGE}" ]]; then docker pull $DOCKER_IMAGE; fi


script:
  - if [[ -n "${TOX_ENV}" ]]; then ./.travis/run.sh; fi
  - if [[ -n "${DOCKER_IMAGE}" ]]; then docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build_wheels.sh; fi

deploy:
  provider: bintray
  file: .travis/bintray.json
  user: hawkowl
  key:
    secure: "rCtybAw2xEHnVIrpGpCx5cDpdZSjBx2kl5fiBHuXyBH/uMa8rovPYLgqsRaJDh6K25VeZY/Cqjb3i/my0ZNbr0nHARcNG+iRYxkyzQsTq5sH88P4KKk/AGvOOH+cGX9+Yz6zv/+ntn65IQpigUyRs/f30AQVNSr73feL7UhORqXV6S825naMyIsPjli77eCLD6UzB+HGFe2CiNpuC/EcQ89IExtzTBRACX5rztg+rTUI2acuhOoKjqUi/QLJ5gUrHwymo0dLYcXcrBNyYgegOWmspDsL/NSCOm+Lfz99iZlKdxSl0sA94fObF4KxjKGMxEsGSh+yUsjdLsIYDgInvPO8IA//KmUOg9QcMN4V2NYcTTyjJSn3FNyn7D1NEKn2SgFZALgrYAt+z9NnfojudmTJ0sO7XgGSaUJ2oANA9WpTFIDS1hm9DGLhuGez217Z4k+bTDjAR21cKlbCM7NPBGl/Mu1ssZDwtmP/4LL/T9/vys1Ca/YQ4CpRPU+xMRlDuA5iUvMrNta4rpU2664OvN5LDmeyBgmkvG1z4EMIKjiEfdlhPMtncNNxNDP8m8KSzt3OCVAGkEbFvreUIYiEU2jFbbmcEwVuEGSUklfycYkSWLoxhICQxmftG44QfQYIT43zkiO3u4p2OVwvFMlOQ0FuLyoAUrcGCwOurBPYu4A="
